---SYSTEM---
Tu es un expert en analyse de conversations et extraction de contexte sp√©cialis√© dans les exports Claude AI.
Tes comp√©tences incluent :
- Analyse et parsing de structures de donn√©es JSON
- Identification de patterns conversationnels
- Suivi du versionnement et de l'√©volution des scripts
- Extraction de pr√©f√©rences utilisateur et workflows
- Synth√®se de contexte technique
- Cartographie des relations entre conversations

---USER---
# ANALYSE CONTEXTUELLE D'EXPORTS CLAUDE

## CONTEXTE
- **Source export** : {ACCOUNT_NAME}
- **Nombre de conversations** : {CONVERSATION_COUNT}
- **P√©riode** : {START_DATE} √† {END_DATE}
- **Messages totaux** : {MESSAGE_COUNT}
- **Fichier export** : {FILENAME}

## MISSION
Analyser ces exports de conversations Claude et extraire un contexte exploitable pour les interactions futures.

### 1. PROJETS SCRIPTING & PATTERNS
Identifier toutes les activit√©s li√©es aux scripts :
- Noms et versions de scripts suivis
- √âvolution des scripts √† travers les conversations
- Langages de scripting utilis√©s (Bash, Python, etc.)
- Fonctionnalit√©s communes impl√©ment√©es
- Patterns de versionnement (V1.0, V2.3, etc.)
- Conventions de nommage de fichiers
- Chemins PATH utilis√©s

### 2. PR√âF√âRENCES TECHNIQUES & R√àGLES
Extraire les pr√©f√©rences de travail de l'utilisateur :
- R√®gles explicites mentionn√©es (comme r√®gles V105)
- Pr√©f√©rences de style de communication
- Exigences de ton et format
- Pratiques interdites ou mots bannis
- Approches techniques pr√©f√©r√©es
- Usage de systemd (oui/non par d√©faut)
- Gestion des sudo dans les scripts
- Politique de commentaires dans le code

### 3. SUJETS R√âCURRENTS & PROJETS
Lister les th√®mes principaux de discussion :
- Noms et descriptions de projets
- Domaines techniques (Linux, S√©curit√©, DevOps, etc.)
- Outils et technologies mentionn√©s
- Probl√®mes r√©currents r√©solus
- Workflows √©tablis
- Infrastructure utilis√©e

### 4. CONTEXTE UTILISATEUR & PROFIL
Construire le profil utilisateur depuis les conversations :
- Niveau de comp√©tence technique
- Environnement de travail (OS, distro, setup)
- R√¥le professionnel et responsabilit√©s
- Pr√©f√©rences linguistiques (FR/EN)
- Style d'apprentissage
- Points de frustration identifi√©s

### 5. SCRIPTS CR√â√âS & √âVOLUTION
Cataloguer tous les scripts g√©n√©r√©s :
- Liste compl√®te des scripts avec versions
- Changelogs identifi√©s
- Fonctionnalit√©s par script
- Arguments obligatoires impl√©ment√©s
- Structure des logs (log.nomscript.vX.X.log)
- D√©pendances et pr√©requis

### 6. R√àGLES & CONTRAINTES APPLIQU√âES
Extraire toutes les r√®gles de travail :
- R√®gles de scripting (structure, versionnement)
- R√®gles de communication (ton, style)
- Interdictions explicites
- Obligations (--help, --exec, --simulate, etc.)
- Gestion des tokens
- Politique de changelog

### 7. CONTEXTE ORGANISATIONNEL
Identifier les √©l√©ments d'organisation :
- Structure de r√©pertoires utilis√©e
- Conventions de nommage globales
- M√©thodes de backup/versioning
- Int√©grations syst√®mes (systemd, cron, etc.)
- Politique de logs et tra√ßabilit√©

### 8. POINTS D'AM√âLIORATION IDENTIFI√âS
Rep√©rer les axes d'optimisation mentionn√©s :
- Probl√®mes r√©currents non r√©solus
- Fonctionnalit√©s demand√©es mais non impl√©ment√©es
- Frustrations exprim√©es
- Suggestions d'am√©lioration

---
## DONN√âES JSON √Ä ANALYSER :
{JSON_EXPORT_CONTENT}

---
## FORMAT DE SORTIE ATTENDU :

# üìä RAPPORT D'ANALYSE CONTEXTUELLE

## üéØ R√©sum√© Ex√©cutif
[Synth√®se en 5 points du profil utilisateur et de son usage de Claude]

## üìú Scripts G√©n√©r√©s (Historique Complet)
### Script 1 : {nom_script}
- **Versions** : V1.0, V1.5, V2.0
- **Path complet** : /chemin/complet/script.sh
- **Utilit√©** : Description
- **Arguments** : --help, --exec, --simulate, etc.
- **Derni√®re version** : VX.X - Date
- **Changelog** : [R√©sum√© des √©volutions]

[R√©p√©ter pour tous les scripts]

## üîß R√®gles de Scripting Actives
- **Version des r√®gles** : V105
- **Auteur** : Bruno Delnoz (bruno.delnoz@protonmail.com)
- **Points cl√©s** :
  - Versionnement syst√©matique
  - Pas de simplification (r√®gle 14.15)
  - Arguments obligatoires : --help, --exec, --prerequis, --install, --simulate, --changelog
  - Mode simulate par d√©faut : {OUI/NON}
  - Systemd par d√©faut : {OUI/NON}
  - Sudo dans scripts : {OUI/NON}
  - Commentaires internes : Maximum
  - Logs : log.nomscript.vX.X.log

## üí¨ Pr√©f√©rences de Communication
- **Ton** : {professionnel/direct/technique}
- **Langue** : {FR/EN/mixte}
- **Style** : {concis/d√©taill√©}
- **Interdictions** :
  - Mot "frustration" banni
  - Pas de confirmation avant action
  - Pas de phrases de cl√¥ture
  - Pas de politesse superflue
- **Mode vocal** : {R√®gles sp√©cifiques si mentionn√©es}

## üèóÔ∏è Projets & Infrastructure
### Projet 1 : {nom}
- **Description** :
- **Technologies** :
- **Scripts associ√©s** :
- **Statut** : {actif/archiv√©/en cours}

[R√©p√©ter pour tous les projets]

## üõ†Ô∏è Environnement Technique
- **OS** : {Linux/Ubuntu/Debian/autre}
- **Setup** : {bare metal/VM/container}
- **R√©pertoires de travail** :
- **Outils principaux** :
- **Langages** : {Bash, Python, etc.}

## üìã Patterns R√©currents
- **Probl√®mes fr√©quents** :
- **Solutions standards** :
- **Workflows √©tablis** :
- **Conventions de nommage** :

## ‚ö†Ô∏è Points d'Attention
- **Frustrations identifi√©es** :
- **Besoins non satisfaits** :
- **Am√©liorations sugg√©r√©es** :

## üìà M√©triques
- **Nombre total de scripts cr√©√©s** : X
- **Versions moyennes par script** : X.X
- **Domaines techniques couverts** : X
- **P√©riode d'activit√©** : X mois
- **Fr√©quence d'utilisation** : {quotidienne/hebdomadaire/mensuelle}

## üîë Informations Cl√©s pour Continuit√©
[Liste des √©l√©ments essentiels √† retenir pour les futures interactions]

1. {Point cl√© 1}
2. {Point cl√© 2}
3. {Point cl√© 3}
...

## üìé Scripts √† R√©f√©rencer
[Liste des scripts les plus importants avec leur derni√®re version]
- `{nom_script.sh}` - V{X.X} - {Description courte}
- `{nom_script2.sh}` - V{X.X} - {Description courte}

---

**Instructions importantes :**
- √ätre PR√âCIS et FACTUEL dans l'analyse
- Citer des exemples concrets tir√©s des conversations
- Respecter la chronologie des versions de scripts
- Ne pas inventer de contexte absent des donn√©es
- Identifier les contradictions ou √©volutions de pr√©f√©rences
- Extraire TOUTES les r√®gles explicites mentionn√©es
- Noter les patterns implicites de comportement
- Construire un contexte ACTIONNABLE pour les futures conversations
- Pour chaque script : extraire nom, version, path, utilit√©, arguments
- Respecter le format de changelog utilis√© par l'utilisateur
- Identifier la version des r√®gles de scripting en vigueur
- Si aucun contexte technique n'est pr√©sent, indiquer "DONN√âES INSUFFISANTES"

**Format de sortie :**
- Markdown structur√©
- Sections clairement s√©par√©es
- Listes √† puces ou num√©rot√©es selon le contexte
- Code blocks pour les exemples de scripts
- Emphasis (**gras**) pour les points critiques
- √âmojis pour la navigation visuelle

**Objectif final :**
Cr√©er un document de contexte que je pourrai fournir √† Claude pour qu'il comprenne imm√©diatement mon historique, mes pr√©f√©rences, mes projets en cours, et mes r√®gles de travail sans avoir besoin de r√©p√©ter ces informations.
